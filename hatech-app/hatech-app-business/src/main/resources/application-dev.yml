
# 服务端口配置
server:
  port: 9001
  # 下面是配置undertow作为服务器的参数
  undertow:
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    io-threads: 8
    # 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
    # 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
    worker-threads: 64
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 1024
    # 是否分配的直接内存
    direct-buffers: true


## 服务注册配置
eureka:
  instance:
    prefer-ip-address: true # 表示：将自己的ip注册到eureka
    host: localhost
    port: 8761
  client:
    service-url:
      defaultZone: http://${eureka.instance.host}:${eureka.instance.port}/eureka/


# 健康检查基础配置
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
    health:
      show-details: always


# 服务名称配置(同时测名称也是注册到eureka中心的名称)
spring:
  application:
    name: hatech-app-business

  # 数据源配置
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    # mysql7连接方式
    url: jdbc:mysql://localhost:3306/xincan-oauth?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&autoReconnect=true&failOverReadOnly=false&allowMultiQueries=true&serverTimezone=GMT
    username: root
    password: 123456
    hikari:
      minimum-idle: 5
      idle-timeout: 180000
      maximum-pool-size: 10
      auto-commit: true
      pool-name: xincan-hikari-cp
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1

# MyBatisPlus设置
# mybatis-plus mapper xml 文件地址
mybatis-plus:
  mapper-locations: classpath*:mapper/*/*/*Mapper.xml
  ##mybatis-plus type-aliases 文件地址
  type-aliases-package: cn.com.hatech.app.business.*.entity.**
  # 以下配置均有默认值,可以不设置
  global-config:
    db-config:
      #主键类 * AUTO: 数据库ID自增; INPUT: 用户输入ID; ID_WORKER: 全局唯一ID, Long类型的主键; ID_WORKER_STR: 字符串全局唯一ID; UUID: 全局唯一ID，UUID类型的主键; NONE: 该类型为未设置主键类型
      id-type: ID_WORKER
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: false
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

security:
  oauth2:
    client:
      clientId: ${spring.application.name}
      clientSecret: 123456
      user-authorization-uri: http://localhost:8070/oauth/authorize   # 获取code
      access-token-uri: http://localhost:8070/oauth/token             # 获取token
      grant-type: client_credentials,refresh_token,password
      scope: server

    resource:
      id: hatech-app-demo #hatech-app-business微服务需要用feign调用hatech-app-demo微服务中的接口
      token-info-uri: http://localhost:8070/oauth/check_token
      user-info-uri: http://localhost:8070/hatech/principal           # 根据Token获取用户信息

    authorization:
      check-token-access: http://localhost:8070/oauth/check_token


# 配置日志
logging:
  level:
    cn.com.hatech: trace
  file: ./log/${spring.application.name}/${spring.application.name}.log






